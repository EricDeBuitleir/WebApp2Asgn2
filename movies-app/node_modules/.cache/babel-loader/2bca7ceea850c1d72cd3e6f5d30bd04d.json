{"ast":null,"code":"import _slicedToArray from \"E:/GitHub/labMoviesApp/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"E:\\\\GitHub\\\\labMoviesApp\\\\src\\\\components\\\\tvComponents\\\\templateTVListPage\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Header from \"../headerTVList\";\nimport FilterCard from \"../filterTVsCard\";\nimport TVList from \"../TVList\";\nimport Grid from \"@mui/material/Grid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TVListPageTemplate(_ref) {\n  _s();\n\n  var TVs = _ref.TVs,\n      title = _ref.title,\n      action = _ref.action;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      nameFilter = _useState2[0],\n      setNameFilter = _useState2[1];\n\n  var _useState3 = useState(\"0\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      genreFilter = _useState4[0],\n      setGenreFilter = _useState4[1];\n\n  var genreId = Number(genreFilter);\n  var displayedTVs = TVs.filter(function (m) {\n    return m.title.toLowerCase().search(nameFilter.toLowerCase()) !== -1;\n  }).filter(function (m) {\n    return genreId > 0 ? m.genre_ids.includes(genreId) : true;\n  });\n\n  var handleChange = function handleChange(type, value) {\n    if (type === \"name\") setNameFilter(value);else setGenreFilter(value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    sx: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Header, {\n        title: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      container: true,\n      spacing: 5,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        lg: 3,\n        xl: 2,\n        children: /*#__PURE__*/_jsxDEV(FilterCard, {\n          onUserInput: handleChange,\n          titleFilter: nameFilter,\n          genreFilter: genreFilter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, \"find\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TVList, {\n        action: action,\n        TVs: displayedTVs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TVListPageTemplate, \"tp+FKkot+cWuqhumDZgCwZIWYAA=\");\n\n_c = TVListPageTemplate;\nexport default TVListPageTemplate;\n\nvar _c;\n\n$RefreshReg$(_c, \"TVListPageTemplate\");","map":{"version":3,"names":["React","useState","Header","FilterCard","TVList","Grid","TVListPageTemplate","TVs","title","action","nameFilter","setNameFilter","genreFilter","setGenreFilter","genreId","Number","displayedTVs","filter","m","toLowerCase","search","genre_ids","includes","handleChange","type","value","padding"],"sources":["E:/GitHub/labMoviesApp/src/components/tvComponents/templateTVListPage/index.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Header from \"../headerTVList\";\r\nimport FilterCard from \"../filterTVsCard\";\r\nimport TVList from \"../TVList\";\r\nimport Grid from \"@mui/material/Grid\";\r\n\r\nfunction TVListPageTemplate({ TVs, title, action }) {\r\n  const [nameFilter, setNameFilter] = useState(\"\");\r\n  const [genreFilter, setGenreFilter] = useState(\"0\");\r\n  const genreId = Number(genreFilter);\r\n\r\n  let displayedTVs = TVs\r\n    .filter((m) => {\r\n      return m.title.toLowerCase().search(nameFilter.toLowerCase()) !== -1;\r\n    })\r\n    .filter((m) => {\r\n      return genreId > 0 ? m.genre_ids.includes(genreId) : true;\r\n    });\r\n\r\n  const handleChange = (type, value) => {\r\n    if (type === \"name\") setNameFilter(value);\r\n    else setGenreFilter(value);\r\n  };\r\n\r\n  return (\r\n    <Grid container sx={{ padding: '20px' }}>\r\n      <Grid item xs={12}>\r\n        <Header title={title} />\r\n      </Grid>\r\n      <Grid item container spacing={5}>\r\n        <Grid key=\"find\" item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n          <FilterCard\r\n            onUserInput={handleChange}\r\n            titleFilter={nameFilter}\r\n            genreFilter={genreFilter}\r\n          />\r\n        </Grid>\r\n        <TVList action={action} TVs={displayedTVs}></TVList>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\nexport default TVListPageTemplate;"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;;AAEA,SAASC,kBAAT,OAAoD;EAAA;;EAAA,IAAtBC,GAAsB,QAAtBA,GAAsB;EAAA,IAAjBC,KAAiB,QAAjBA,KAAiB;EAAA,IAAVC,MAAU,QAAVA,MAAU;;EAClD,gBAAoCR,QAAQ,CAAC,EAAD,CAA5C;EAAA;EAAA,IAAOS,UAAP;EAAA,IAAmBC,aAAnB;;EACA,iBAAsCV,QAAQ,CAAC,GAAD,CAA9C;EAAA;EAAA,IAAOW,WAAP;EAAA,IAAoBC,cAApB;;EACA,IAAMC,OAAO,GAAGC,MAAM,CAACH,WAAD,CAAtB;EAEA,IAAII,YAAY,GAAGT,GAAG,CACnBU,MADgB,CACT,UAACC,CAAD,EAAO;IACb,OAAOA,CAAC,CAACV,KAAF,CAAQW,WAAR,GAAsBC,MAAtB,CAA6BV,UAAU,CAACS,WAAX,EAA7B,MAA2D,CAAC,CAAnE;EACD,CAHgB,EAIhBF,MAJgB,CAIT,UAACC,CAAD,EAAO;IACb,OAAOJ,OAAO,GAAG,CAAV,GAAcI,CAAC,CAACG,SAAF,CAAYC,QAAZ,CAAqBR,OAArB,CAAd,GAA8C,IAArD;EACD,CANgB,CAAnB;;EAQA,IAAMS,YAAY,GAAG,SAAfA,YAAe,CAACC,IAAD,EAAOC,KAAP,EAAiB;IACpC,IAAID,IAAI,KAAK,MAAb,EAAqBb,aAAa,CAACc,KAAD,CAAb,CAArB,KACKZ,cAAc,CAACY,KAAD,CAAd;EACN,CAHD;;EAKA,oBACE,QAAC,IAAD;IAAM,SAAS,MAAf;IAAgB,EAAE,EAAE;MAAEC,OAAO,EAAE;IAAX,CAApB;IAAA,wBACE,QAAC,IAAD;MAAM,IAAI,MAAV;MAAW,EAAE,EAAE,EAAf;MAAA,uBACE,QAAC,MAAD;QAAQ,KAAK,EAAElB;MAAf;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,eAIE,QAAC,IAAD;MAAM,IAAI,MAAV;MAAW,SAAS,MAApB;MAAqB,OAAO,EAAE,CAA9B;MAAA,wBACE,QAAC,IAAD;QAAiB,IAAI,MAArB;QAAsB,EAAE,EAAE,EAA1B;QAA8B,EAAE,EAAE,CAAlC;QAAqC,EAAE,EAAE,CAAzC;QAA4C,EAAE,EAAE,CAAhD;QAAmD,EAAE,EAAE,CAAvD;QAAA,uBACE,QAAC,UAAD;UACE,WAAW,EAAEe,YADf;UAEE,WAAW,EAAEb,UAFf;UAGE,WAAW,EAAEE;QAHf;UAAA;UAAA;UAAA;QAAA;MADF,GAAU,MAAV;QAAA;QAAA;QAAA;MAAA,QADF,eAQE,QAAC,MAAD;QAAQ,MAAM,EAAEH,MAAhB;QAAwB,GAAG,EAAEO;MAA7B;QAAA;QAAA;QAAA;MAAA,QARF;IAAA;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAiBD;;GAnCQV,kB;;KAAAA,kB;AAoCT,eAAeA,kBAAf"},"metadata":{},"sourceType":"module"}