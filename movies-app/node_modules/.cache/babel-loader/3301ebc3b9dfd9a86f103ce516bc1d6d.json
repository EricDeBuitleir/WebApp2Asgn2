{"ast":null,"code":"import _slicedToArray from \"E:/GitHub/WebApp2Asgn2/moviesAPIAssignment2WAD2/movies-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"E:\\\\GitHub\\\\WebApp2Asgn2\\\\moviesAPIAssignment2WAD2\\\\movies-app\\\\src\\\\components\\\\actorComponents\\\\templateActorListPage\\\\index.js\";\nimport React, { useState } from \"react\";\nimport Header from \"../headerActorList\";\nimport FilterCard from \"../filterActorsCard\";\nimport ActorList from \"../actorList\";\nimport Grid from \"@mui/material/Grid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ActorListPageTemplate(_ref) {\n  var actors = _ref.actors,\n      name = _ref.name,\n      action = _ref.action;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      nameFilter = _useState2[0],\n      setNameFilter = _useState2[1]; // const [genreFilter, setGenreFilter] = useState(\"0\");\n  // const genreId = Number(genreFilter);\n\n\n  var displayedActors = actors.filter(function (m) {\n    return m.name.toLowerCase().search(nameFilter.toLowerCase()) !== -1;\n  }); //   .filter((m) => {\n  //     return genreId > 0 ? m.genre_ids.includes(genreId) : true;\n  //   });\n  // const handleChange = (type, value) => {\n  //   if (type === \"name\") setNameFilter(value);\n  //   else setGenreFilter(value);\n  // };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    sx: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Header, {\n        name: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      container: true,\n      spacing: 5,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        lg: 3,\n        xl: 2,\n        children: /*#__PURE__*/_jsxDEV(FilterCard //onUserInput={handleChange}\n        , {\n          nameFilter: nameFilter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)\n      }, \"find\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ActorList, {\n        action: action,\n        actors: displayedActors\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n\nexport default ActorListPageTemplate;","map":{"version":3,"names":["React","useState","Header","FilterCard","ActorList","Grid","ActorListPageTemplate","actors","name","action","nameFilter","setNameFilter","displayedActors","filter","m","toLowerCase","search","padding"],"sources":["E:/GitHub/WebApp2Asgn2/moviesAPIAssignment2WAD2/movies-app/src/components/actorComponents/templateActorListPage/index.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Header from \"../headerActorList\";\r\nimport FilterCard from \"../filterActorsCard\";\r\nimport ActorList from \"../actorList\";\r\nimport Grid from \"@mui/material/Grid\";\r\n\r\nfunction ActorListPageTemplate({ actors, name, action }) {\r\n  const [nameFilter, setNameFilter] = useState(\"\");\r\n  // const [genreFilter, setGenreFilter] = useState(\"0\");\r\n  // const genreId = Number(genreFilter);\r\n\r\n  let displayedActors = actors.filter((m) => {\r\n      return m.name.toLowerCase().search(nameFilter.toLowerCase()) !== -1;\r\n    })\r\n  //   .filter((m) => {\r\n  //     return genreId > 0 ? m.genre_ids.includes(genreId) : true;\r\n  //   });\r\n\r\n  // const handleChange = (type, value) => {\r\n  //   if (type === \"name\") setNameFilter(value);\r\n  //   else setGenreFilter(value);\r\n  // };\r\n\r\n  return (\r\n    <Grid container sx={{ padding: '20px' }}>\r\n      <Grid item xs={12}>\r\n        <Header name={name} />\r\n      </Grid>\r\n      <Grid item container spacing={5}>\r\n        <Grid key=\"find\" item xs={12} sm={6} md={4} lg={3} xl={2}>\r\n          <FilterCard\r\n            //onUserInput={handleChange}\r\n            nameFilter={nameFilter}\r\n            \r\n          />\r\n        </Grid>\r\n        <ActorList action={action} actors={displayedActors}></ActorList>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\nexport default ActorListPageTemplate;"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;;AAEA,SAASC,qBAAT,OAAyD;EAAA,IAAxBC,MAAwB,QAAxBA,MAAwB;EAAA,IAAhBC,IAAgB,QAAhBA,IAAgB;EAAA,IAAVC,MAAU,QAAVA,MAAU;;EACvD,gBAAoCR,QAAQ,CAAC,EAAD,CAA5C;EAAA;EAAA,IAAOS,UAAP;EAAA,IAAmBC,aAAnB,iBADuD,CAEvD;EACA;;;EAEA,IAAIC,eAAe,GAAGL,MAAM,CAACM,MAAP,CAAc,UAACC,CAAD,EAAO;IACvC,OAAOA,CAAC,CAACN,IAAF,CAAOO,WAAP,GAAqBC,MAArB,CAA4BN,UAAU,CAACK,WAAX,EAA5B,MAA0D,CAAC,CAAlE;EACD,CAFmB,CAAtB,CALuD,CAQvD;EACA;EACA;EAEA;EACA;EACA;EACA;;EAEA,oBACE,QAAC,IAAD;IAAM,SAAS,MAAf;IAAgB,EAAE,EAAE;MAAEE,OAAO,EAAE;IAAX,CAApB;IAAA,wBACE,QAAC,IAAD;MAAM,IAAI,MAAV;MAAW,EAAE,EAAE,EAAf;MAAA,uBACE,QAAC,MAAD;QAAQ,IAAI,EAAET;MAAd;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,eAIE,QAAC,IAAD;MAAM,IAAI,MAAV;MAAW,SAAS,MAApB;MAAqB,OAAO,EAAE,CAA9B;MAAA,wBACE,QAAC,IAAD;QAAiB,IAAI,MAArB;QAAsB,EAAE,EAAE,EAA1B;QAA8B,EAAE,EAAE,CAAlC;QAAqC,EAAE,EAAE,CAAzC;QAA4C,EAAE,EAAE,CAAhD;QAAmD,EAAE,EAAE,CAAvD;QAAA,uBACE,QAAC,UAAD,CACE;QADF;UAEE,UAAU,EAAEE;QAFd;UAAA;UAAA;UAAA;QAAA;MADF,GAAU,MAAV;QAAA;QAAA;QAAA;MAAA,QADF,eAQE,QAAC,SAAD;QAAW,MAAM,EAAED,MAAnB;QAA2B,MAAM,EAAEG;MAAnC;QAAA;QAAA;QAAA;MAAA,QARF;IAAA;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAiBD;;AACD,eAAeN,qBAAf"},"metadata":{},"sourceType":"module"}