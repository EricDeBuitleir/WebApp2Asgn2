{"ast":null,"code":"var _jsxFileName = \"E:\\\\GitHub\\\\labMoviesApp\\\\src\\\\pages\\\\popularActorPage.js\",\n    _this = this;\n\nimport React from \"react\";\nimport PageTemplate from \"../components/actorComponents/templateActorListPage\";\nimport { getPopularActors } from \"../api/tmdb-api\";\nimport { useQuery } from 'react-query';\nimport Spinner from '../components/spinner';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar PopularActor = function PopularActor(props) {\n  var _useQuery = useQuery('popular', getPopularActors),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      isLoading = _useQuery.isLoading,\n      isError = _useQuery.isError;\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 12\n    }, _this);\n  }\n\n  if (isError) {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: error.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 12\n    }, _this);\n  }\n\n  var actor = data.results; // Redundant, but necessary to avoid app crashing.\n\n  var favourites = actor.filter(function (m) {\n    return m.favourite;\n  });\n  localStorage.setItem('favourites', JSON.stringify(favourites));\n  return /*#__PURE__*/_jsxDEV(PageTemplate, {\n    name: \"Popular Actors\",\n    actors: actor\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, _this);\n};\n\nexport default PopularActor;","map":{"version":3,"names":["React","PageTemplate","getPopularActors","useQuery","Spinner","PopularActor","props","data","error","isLoading","isError","message","actor","results","favourites","filter","m","favourite","localStorage","setItem","JSON","stringify"],"sources":["E:/GitHub/labMoviesApp/src/pages/popularActorPage.js"],"sourcesContent":["import React from \"react\";\r\nimport PageTemplate from \"../components/actorComponents/templateActorListPage\";\r\nimport { getPopularActors} from \"../api/tmdb-api\";\r\nimport { useQuery } from 'react-query';\r\nimport Spinner from '../components/spinner';\r\n\r\n\r\nconst PopularActor = (props) => {\r\n\r\n  const {  data, error, isLoading, isError }  = useQuery('popular', getPopularActors)\r\n\r\n  if (isLoading) {\r\n    return <Spinner />\r\n  }\r\n\r\n  if (isError) {\r\n    return <h1>{error.message}</h1>\r\n  }  \r\n  const actor = data.results;\r\n\r\n  // Redundant, but necessary to avoid app crashing.\r\n  const favourites = actor.filter(m => m.favourite)\r\n  localStorage.setItem('favourites', JSON.stringify(favourites))\r\n\r\n  \r\n  return (\r\n    <PageTemplate\r\n      name=\"Popular Actors\"\r\n      actors={actor}\r\n    />\r\n  );\r\n};\r\nexport default PopularActor;"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,qDAAzB;AACA,SAASC,gBAAT,QAAgC,iBAAhC;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,OAAP,MAAoB,uBAApB;;;AAGA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;EAE9B,gBAA8CH,QAAQ,CAAC,SAAD,EAAYD,gBAAZ,CAAtD;EAAA,IAASK,IAAT,aAASA,IAAT;EAAA,IAAeC,KAAf,aAAeA,KAAf;EAAA,IAAsBC,SAAtB,aAAsBA,SAAtB;EAAA,IAAiCC,OAAjC,aAAiCA,OAAjC;;EAEA,IAAID,SAAJ,EAAe;IACb,oBAAO,QAAC,OAAD;MAAA;MAAA;MAAA;IAAA,SAAP;EACD;;EAED,IAAIC,OAAJ,EAAa;IACX,oBAAO;MAAA,UAAKF,KAAK,CAACG;IAAX;MAAA;MAAA;MAAA;IAAA,SAAP;EACD;;EACD,IAAMC,KAAK,GAAGL,IAAI,CAACM,OAAnB,CAX8B,CAa9B;;EACA,IAAMC,UAAU,GAAGF,KAAK,CAACG,MAAN,CAAa,UAAAC,CAAC;IAAA,OAAIA,CAAC,CAACC,SAAN;EAAA,CAAd,CAAnB;EACAC,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmCC,IAAI,CAACC,SAAL,CAAeP,UAAf,CAAnC;EAGA,oBACE,QAAC,YAAD;IACE,IAAI,EAAC,gBADP;IAEE,MAAM,EAAEF;EAFV;IAAA;IAAA;IAAA;EAAA,SADF;AAMD,CAxBD;;AAyBA,eAAeP,YAAf"},"metadata":{},"sourceType":"module"}